#include <iostream>

#include <opencv2/core.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>

#include "markerDict.h"


markerDict::markerDict() {
	// All markers
	one = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 1, 1, 1,
		1, 0, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	one_mat = cv::Mat(7, 7, CV_32SC1, one.data());
	two = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	two_mat = cv::Mat(7, 7, CV_32SC1, two.data());
	three = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 0, 1, 1
	};
	three_mat = cv::Mat(7, 7, CV_32SC1, three.data());
	four = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 0, 1, 1,
		1, 1, 1, 0, 0, 1, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	four_mat = cv::Mat(7, 7, CV_32SC1, four.data());
	five = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	five_mat = cv::Mat(7, 7, CV_32SC1, five.data());
	six = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	six_mat = cv::Mat(7, 7, CV_32SC1, six.data());
	seven = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 0, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	seven_mat = cv::Mat(7, 7, CV_32SC1, seven.data());
	eight = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	eight_mat = cv::Mat(7, 7, CV_32SC1, eight.data());
	nine = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	nine_mat = cv::Mat(7, 7, CV_32SC1, nine.data());
	zero = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 0, 1, 1, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 0, 1, 1, 0, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	zero_mat = cv::Mat(7, 7, CV_32SC1, zero.data());
	A = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	A_mat = cv::Mat(7, 7, CV_32SC1, A.data());
	B = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	B_mat = cv::Mat(7, 7, CV_32SC1, B.data());
	C = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	C_mat = cv::Mat(7, 7, CV_32SC1, C.data());
	D = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	D_mat = cv::Mat(7, 7, CV_32SC1, D.data());
	E = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	E_mat = cv::Mat(7, 7, CV_32SC1, E.data());
	F = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	F_mat = cv::Mat(7, 7, CV_32SC1, F.data());
	G = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 1, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	G_mat = cv::Mat(7, 7, CV_32SC1, G.data());
	H = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	H_mat = cv::Mat(7, 7, CV_32SC1, H.data());
	I = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	I_mat = cv::Mat(7, 7, CV_32SC1, I.data());
	J = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	J_mat = cv::Mat(7, 7, CV_32SC1, J.data());
	K = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 0, 1, 1,
		1, 0, 0, 0, 1, 1, 1,
		1, 0, 1, 1, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	K_mat = cv::Mat(7, 7, CV_32SC1, K.data());
	L = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	L_mat = cv::Mat(7, 7, CV_32SC1, L.data());
	M = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 1, 0, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	M_mat = cv::Mat(7, 7, CV_32SC1, M.data());
	N = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 1, 1, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 0, 1, 1, 0, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	N_mat = cv::Mat(7, 7, CV_32SC1, N.data());
	O = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	O_mat = cv::Mat(7, 7, CV_32SC1, O.data());
	P = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	P_mat = cv::Mat(7, 7, CV_32SC1, P.data());
	Q = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 0, 1, 1,
		1, 1, 0, 0, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	Q_mat = cv::Mat(7, 7, CV_32SC1, Q.data());
	R = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	R_mat = cv::Mat(7, 7, CV_32SC1, R.data());
	S = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	S_mat = cv::Mat(7, 7, CV_32SC1, S.data());
	T = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	T_mat = cv::Mat(7, 7, CV_32SC1, T.data());
	U = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	U_mat = cv::Mat(7, 7, CV_32SC1, U.data());
	V = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	V_mat = cv::Mat(7, 7, CV_32SC1, V.data());
	W = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	W_mat = cv::Mat(7, 7, CV_32SC1, W.data());
	X = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	X_mat = cv::Mat(7, 7, CV_32SC1, X.data());
	Y = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	Y_mat = cv::Mat(7, 7, CV_32SC1, Y.data());
	Z = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 0, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 0, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	Z_mat = cv::Mat(7, 7, CV_32SC1, Z.data());
	question = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 1, 1, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	question_mat = cv::Mat(7, 7, CV_32SC1, question.data());
	heart = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 1, 0, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	heart_mat = cv::Mat(7, 7, CV_32SC1, heart.data());
	arrow_u = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	arrow_u_mat = cv::Mat(7, 7, CV_32SC1, arrow_u.data());
	arrow_l = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 1, 0, 0, 0, 0, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 0, 0, 1,
		1, 1, 1, 1, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	arrow_l_mat = cv::Mat(7, 7, CV_32SC1, arrow_l.data());
	arrow_r = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 0, 1, 1, 1,
		1, 0, 0, 0, 0, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 0, 1, 1, 1, 1,
		1, 0, 0, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	arrow_r_mat = cv::Mat(7, 7, CV_32SC1, arrow_r.data());
	dot = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 0, 1, 1, 1, 0, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	dot_mat = cv::Mat(7, 7, CV_32SC1, dot.data());
	square = {
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	square_mat = cv::Mat(7, 7, CV_32SC1, square.data());
	farm = {
		1, 1, 1, 1, 1, 1, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 0, 1, 0, 1, 0, 1,
		1, 0, 0, 0, 0, 0, 1,
		1, 1, 1, 1, 1, 1, 1
	};
	farm_mat = cv::Mat(7, 7, CV_32SC1, farm.data());
	markers = {
		one_mat, two_mat, three_mat, four_mat, five_mat, six_mat, seven_mat, eight_mat, nine_mat, zero_mat,
		A_mat, B_mat, C_mat, D_mat, E_mat, F_mat, G_mat, H_mat, I_mat, J_mat, K_mat, L_mat, M_mat, N_mat, O_mat, P_mat, Q_mat, R_mat, S_mat, T_mat, U_mat, V_mat, W_mat, X_mat, Y_mat, Z_mat,
		question_mat, heart_mat, arrow_u_mat, arrow_l_mat, arrow_r_mat, dot_mat, square_mat, farm_mat
	};
	names = {
		"one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "zero",
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
		"question", "heart", "arrow_u", "arrow_l", "arrow_r", "dot", "square", "farm"
	};
}


bool markerDict::borderCheck(cv::Mat marker) {
	int border_sum = 0;
	for (int i(0); i < 7; ++i) {
		border_sum += marker.at<int>(0, i) +
					  marker.at<int>(6, i) +
					  marker.at<int>(i, 0) +
					  marker.at<int>(i, 6);
	}
	if (border_sum >= MIN_BORDER_SUM) {
		return true;
	}
	else {
		return false;
	}
}


std::string markerDict::getMarker(cv::Mat candidate) {
	if (borderCheck(candidate)) {
		return "none";
	}
	cv::Mat diff(7, 7, CV_32SC1, cv::Scalar::all(0));
	for (int i(0); i < markers.size(); ++i) {
		cv::absdiff(markers[i], candidate, diff);
		if ((int)cv::countNonZero(diff) == MAX_ERROR_BITS) {
			return names[i];
		}
	}
	return "none";
}
